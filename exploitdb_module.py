import pyxploitdb
import pandas as pd
import re
from datetime import datetime

def exploitdb_query(tech):

    today_date = datetime.now().date()


    df = pd.DataFrame()

    tech_list = []
    exploit_id_list = []
    exploit_description_list = []
    exploit_type_list = []
    exploit_platform_list = []
    exploit_date_published_list = []
    exploit_verified_list = []
    exploit_port_list = []
    exploit_tag_if_any_list = []
    exploit_author_list = []
    exploit_link_list = []

    try:
        result = pyxploitdb.searchEDB(tech)

        if len(result) != 0:

            for res in result:
                res_string = str(res).replace("Exploit", "").replace("(", "").replace(")", "").replace("'", "")

                exploit_id = re.search(r'id=(.*?),', res_string)
                exploit_description = re.search(r'description=(.*?),', res_string)
                exploit_type = re.search(r'type=(.*?),', res_string)
                exploit_platform = re.search(r'platform=(.*?),', res_string)
                exploit_date_published = re.search(r'date_published=(.*?),', res_string)
                exploit_verified = re.search(r'verified=(.*?),', res_string)
                exploit_port = re.search(r'port=(.*?),', res_string)
                exploit_tag_if_any = re.search(r'tag_if_any=(.*?),', res_string)
                exploit_author = re.search(r'author=(.*?),', res_string)
                exploit_link = re.compile(r'https?://\S+').findall(res_string)[0]

                tech_list.append(tech)
                exploit_id_list.append(exploit_id.group(1))
                exploit_description_list.append(exploit_description.group(1))
                exploit_type_list.append(exploit_type.group(1))
                exploit_platform_list.append(exploit_platform.group(1))
                exploit_date_published_list.append(exploit_date_published.group(1))
                exploit_verified_list.append(exploit_verified.group(1))
                exploit_port_list.append(exploit_port.group(1))
                exploit_tag_if_any_list.append(exploit_tag_if_any.group(1))
                exploit_author_list.append(exploit_author.group(1))
                exploit_link_list.append(exploit_link)

        else:

            tech_list.append(tech)
            exploit_id_list.append("no result")
            exploit_description_list.append("no result")
            exploit_type_list.append("no result")
            exploit_platform_list.append("no result")
            exploit_date_published_list.append(today_date)
            exploit_verified_list.append("no result")
            exploit_port_list.append("no result")
            exploit_tag_if_any_list.append("no result")
            exploit_author_list.append("no result")
            exploit_link_list.append("no result")

    except KeyError:

        tech_list.append(tech)
        exploit_id_list.append("no result")
        exploit_description_list.append("no result")
        exploit_type_list.append("no result")
        exploit_platform_list.append("no result")
        exploit_date_published_list.append(today_date)
        exploit_verified_list.append("no result")
        exploit_port_list.append("no result")
        exploit_tag_if_any_list.append("no result")
        exploit_author_list.append("no result")
        exploit_link_list.append("no result")

    df["tech"] = tech_list
    df["id"] = exploit_id_list
    df["description"] = exploit_description_list
    df["type"] = exploit_type_list
    df["platform"] = exploit_platform_list
    df["date_published"] = exploit_date_published_list
    df["verified"] = exploit_verified_list
    df["port"] = exploit_port_list
    df["tag_if_any"] = exploit_tag_if_any_list
    df["author"] = exploit_author_list
    df["link"] = exploit_link_list

    df['date_published'] = pd.to_datetime(df['date_published'])
    df = df.sort_values(by='date_published', ascending=False)

    return df


