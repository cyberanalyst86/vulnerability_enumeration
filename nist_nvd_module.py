import requests
import json
import re
import numpy as np
import urllib.parse
import pandas as pd
from datetime import datetime
from dateutil.relativedelta import relativedelta

def calculate_date():
    today_date = datetime.now().date()

    today_date_string = str(today_date) + "T00:00:00.000"

    original_datetime = datetime.fromisoformat(today_date_string)

    three_months_ago = original_datetime - relativedelta(months=3)

    result_time_str = three_months_ago.strftime("%Y-%m-%dT%H:%M:%S.%f")[:-3]

    return today_date_string, result_time_str


def nist_nvd_query(tech):

    df = pd.DataFrame()

    tech_list = []
    cve_id_list = []
    published_list = []
    lastModified_list = []
    descriptions_list = []
    attackVector_list = []
    attackComplexity_list = []
    privilegesRequired_list = []
    userInteraction_list = []
    confidentialityImpact_list = []
    integrityImpact_list = []
    availabilityImpact_list = []
    baseScore_list = []
    baseSeverity_list = []
    exploitabilityScore_list = []
    impactScore_list = []
    CWE_list = []
    Reference_list = []

    today_date_string, result_time_str = calculate_date()

    url = f"https://services.nvd.nist.gov/rest/json/cves/2.0?pubStartDate=" + \
          str(result_time_str) + "&pubEndDate=" + str(today_date_string) + \
          "&keywordSearch=" + str(tech)

    response = requests.get(url)

    if response.status_code == 200:

        for vuln in response.json()["vulnerabilities"]:

            match = re.search(r'\b-(\d{4})-\b', vuln["cve"]["id"])

            if match:

                tech_list.append(tech)
                cve_id_list.append(vuln["cve"]["id"])
                published_list.append(vuln["cve"]["published"])
                lastModified_list.append(vuln["cve"]["lastModified"])
                descriptions_list.append(vuln["cve"]["descriptions"][0]["value"])

                attackVector_lst = []
                attackComplexity_lst = []
                privilegesRequired_lst = []
                userInteraction_lst = []
                confidentialityImpact_lst = []
                integrityImpact_lst = []
                availabilityImpact_lst = []
                baseScore_lst = []
                baseSeverity_lst = []
                exploitabilityScore_lst = []
                impactScore_lst = []

                for elem in vuln["cve"]["metrics"]["cvssMetricV31"]:
                    attackVector_lst.append(elem["cvssData"]["attackVector"])
                    attackComplexity_lst.append(elem["cvssData"]["attackComplexity"])
                    privilegesRequired_lst.append(elem["cvssData"]["privilegesRequired"])
                    userInteraction_lst.append(elem["cvssData"]["userInteraction"])
                    confidentialityImpact_lst.append(elem["cvssData"]["confidentialityImpact"])
                    integrityImpact_lst.append(elem["cvssData"]["integrityImpact"])
                    availabilityImpact_lst.append(elem["cvssData"]["availabilityImpact"])
                    baseScore_lst.append(elem["cvssData"]["baseScore"])
                    baseSeverity_lst.append(elem["cvssData"]["baseSeverity"])
                    exploitabilityScore_lst.append(elem["exploitabilityScore"])
                    impactScore_lst.append(elem["impactScore"])

                attackVector_list.append(list(dict.fromkeys(attackVector_lst))[0])
                attackComplexity_list.append(list(dict.fromkeys(attackComplexity_lst))[0])
                privilegesRequired_list.append(list(dict.fromkeys(privilegesRequired_lst))[0])
                userInteraction_list.append(list(dict.fromkeys(userInteraction_lst))[0])
                confidentialityImpact_list.append(list(dict.fromkeys(confidentialityImpact_lst))[0])
                integrityImpact_list.append(list(dict.fromkeys(integrityImpact_lst))[0])
                availabilityImpact_list.append(list(dict.fromkeys(availabilityImpact_lst))[0])
                baseScore_list.append(list(dict.fromkeys(baseScore_lst))[0])
                baseSeverity_list.append(list(dict.fromkeys(baseSeverity_lst))[0])
                exploitabilityScore_list.append(list(dict.fromkeys(exploitabilityScore_lst))[0])
                impactScore_list.append(list(dict.fromkeys(impactScore_lst))[0])

                CWE_lst = []
                Reference_lst = []

                try:
                    for elem in vuln["cve"]["weaknesses"]:
                        CWE_lst.append(elem["description"][0]["value"])
                        Reference_lst.append(vuln["cve"]["references"][0]["url"])

                    CWE_list.append(list(dict.fromkeys(CWE_lst))[0])
                    Reference_list.append(list(dict.fromkeys(Reference_lst))[0])

                except KeyError:

                    CWE_list.append("")
                    Reference_list.append("")

            else:
                continue
    else:

        tech_list.append(tech)
        cve_id_list.append("no result")
        published_list.append(today_date_string)
        lastModified_list.append("no result")
        descriptions_list.append("no result")
        attackVector_list.append("no result")
        attackComplexity_list.append("no result")
        privilegesRequired_list.append("no result")
        userInteraction_list.append("no result")
        confidentialityImpact_list.append("no result")
        integrityImpact_list.append("no result")
        availabilityImpact_list.append("no result")
        baseScore_list.append("no result")
        baseSeverity_list.append("no result")
        exploitabilityScore_list.append("no result")
        impactScore_list.append("no result")
        CWE_list.append("no result")
        Reference_list.append("no result")

    df["tech"] = tech_list
    df["cve_id"] = cve_id_list
    df["published"] = published_list
    df["lastModified"] = lastModified_list
    df["descriptions"] = descriptions_list
    df["attackVector"] = attackVector_list
    df["attackComplexity"] = attackComplexity_list
    df["privilegesRequired"] = privilegesRequired_list
    df["userInteraction"] = userInteraction_list
    df["confidentiality"] = confidentialityImpact_list
    df["integrityImpact"] = integrityImpact_list
    df["availabilityImpact"] = availabilityImpact_list
    df["baseScore"] = baseScore_list
    df["baseSeverity"] = baseSeverity_list
    df["exploitabilityScore"] = exploitabilityScore_list
    df["impactScore"] = impactScore_list
    df["CWE"] = CWE_list
    df["Reference"] = Reference_list

    df['published'] = pd.to_datetime(df['published'])
    df = df.sort_values(by='published', ascending=False)

    return df